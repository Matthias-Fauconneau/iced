[package]
name = "iced"
version = "0.1.1"
authors = ["Héctor Ramón Jiménez <hector0193@gmail.com>"]
edition = "2018"
description = "A cross-platform GUI library inspired by Elm"
license = "MIT"
repository = "https://github.com/hecrj/iced"
documentation = "https://docs.rs/iced"
readme = "README.md"
keywords = ["gui", "ui", "graphics", "interface", "widgets"]
categories = ["gui"]

[features]
# Enables the clipboard
clipboard = ["iced_winit/clipboard", "iced_sctk/clipboard"]
# Enables the `Image` widget
image = ["iced_wgpu/image", "iced_shm/image"]
# Enables the `Svg` widget
svg = ["iced_wgpu/svg", "iced_shm/svg"]
# Enables the `Canvas` widget
canvas = ["iced_wgpu/canvas", "iced_shm/canvas"]
# Enables a debug view in native platforms (press F12)
debug = ["iced_winit/debug"]
# Enables `tokio` as the `executor::Default` on native platforms
tokio = ["iced_futures/tokio"]
# Enables `async-std` as the `executor::Default` on native platforms
async-std = ["iced_futures/async-std"]
# Alias to auto use each default backend (winit<->wgpu, sctk<->shm)
wgpu = ["iced_wgpu"]#,"iced_winit"]
winit = ["iced_winit"]#,"iced_shm"]
shm = ["iced_shm"]#,"iced_sctk"]
#shm = ["iced_shm","iced_winit"]
sctk = ["iced_sctk"]#,"iced_shm"]
default = ["shm"]
# Enables advanced color conversion via `palette`
palette = ["iced_core/palette"]

[badges]
maintenance = { status = "actively-developed" }

[workspace]
members = [
    "core",
    "futures",
    "native",
    "style",
    "web",
    "wgpu",
    "shm",
    "sctk",
    "winit",
    "examples/bezier_tool",
    "examples/clock",
    "examples/color_palette",
    "examples/counter",
    "examples/custom_widget",
    "examples/download_progress",
    "examples/events",
    "examples/game_of_life",
    "examples/geometry",
    "examples/integration",
    "examples/pane_grid",
    "examples/pokedex",
    "examples/progress_bar",
    "examples/solar_system",
    "examples/stopwatch",
    "examples/styling",
    "examples/svg",
    "examples/todos",
    "examples/tour",
]

[dependencies]
iced_core = { version = "0.2", path = "core" }
iced_futures = { version = "0.1", path = "futures" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
iced_sctk = { version = "0.0", path = "sctk", optional=true }
iced_winit = { version = "0.1", path = "winit", optional=true }
iced_shm = { version = "0.0", path = "shm", optional=true }
iced_wgpu = { version = "0.2", path = "wgpu", optional=true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
iced_web = { version = "0.2", path = "web" }

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]
features = ["image", "svg", "canvas"]
